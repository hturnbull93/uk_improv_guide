version: '3.7'

x-base-dev: &base-dev
  restart: on-failure

x-base-database: &base-database
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_PORT: '5432'
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_HOST: 'db'

x-base-image: &base-image
  image: salimfadhley/uk_improv_guide:0.1.4

services:

  dev:
    <<: *base-dev
    <<: *base-image
    build:
      context: .
      target: uk_improv_guide
    volumes:
      - ./src:/src
      - ./static:/src/uk_improv_guide/static
    working_dir: "/src/uk_improv_guide"
    entrypoint: ["/src/uk_improv_guide/start.sh"]
    ports:
      - "80:80"
    depends_on:
      - db
    environment:
      <<: *base-database
      SITE_PORT: ${SITE_PORT}
    networks:
      - internal



  python:
    <<: *base-image
    volumes:
      - ./src:/src
    depends_on:
      - db
    environment:
      <<: *base-database
    networks:
      - internal

  db:
    <<: *base-dev
    image: postgres:11.4
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_PORT: '5432'
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - internal

  adminer:
    image: adminer:4.7.1
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: "db"
    depends_on:
      - db
    networks:
      - internal


volumes:
  postgres_data:


networks:
  internal: